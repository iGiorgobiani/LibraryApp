@model LibraryApp.Models.Book.EditBookModel

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.min.css" integrity="sha512-yVvxUQV0QESBt1SyZbNJMAwyKvFTLMyXSyBHDO4BG5t7k/Lw34tyqlSDlKIrIENIzCl+RVUNjmCPG+V/GMesRw==" crossorigin="anonymous" />



<div>
	<div>
		<h2>Edit book</h2>
	</div>

	<div>
		@using (Html.BeginForm("EditBook", "Home", FormMethod.Post))
		{
			@Html.HiddenFor(x => x.BookId)
			<div class="col-md-5" finput>
				@Html.LabelFor(x => x.Name)
				@Html.TextBoxFor(x => x.Name, new { @class = "form-control", @type = "text", @maxLength = "100", @placeholder = "Enter book name" })
				@Html.ValidationMessageFor(x => x.Name, null, new { @class = "text-danger" })
			</div>

			<div class="col-md-5" finput>
				@Html.LabelFor(x => x.Year)
				@Html.TextBoxFor(x => x.Year, new { @class = "form-control", @type = "text", @maxLength = "100", @placeholder = "Enter year of publishing" })
				@Html.ValidationMessageFor(x => x.Year, null, new { @class = "text-danger" })
			</div>

			<div class="col-md-5" finput>
				@Html.LabelFor(x => x.Pages)
				@Html.TextBoxFor(x => x.Pages, new { @class = "form-control", @type = "text", @maxLength = "100", @placeholder = "Enter amount of pages" })
				@Html.ValidationMessageFor(x => x.Pages, null, new { @class = "text-danger" })
			</div>

			<div class="form-group">
				@Html.LabelFor(m => m.Genres, "Genres", new { @class = "control-label" })

				@Html.ListBoxFor(
								m => m.Genres,
								new MultiSelectList(Model.Genres, "GenreId", "Name", Model.Genres.Select(g => g.GenreId)),
								new { @class = "form-control chosen-select", @data_placeholder = "Choose genres..." }
								)

				@Html.ValidationMessageFor(m => m.Genres, "", new { @class = "text-danger" })
			</div>

			<div>
				<div class="col-md-5" finput>
					<br />
					<label for="SelectedGenreIds">Genre</label>
					@Html.ListBoxFor(x => x.SelectedGenreIds, (IEnumerable<SelectListItem>)ViewBag.GenreSelectList, new { @class = "chosen-select form-control", @data_placeholder = "Choose genre" })
					@Html.ValidationMessageFor(x => x.SelectedGenreIds, null, new { @class = "text-danger" })
				</div>
				<br />
			</div>


@* 			<div class="col-md-5" finput>
				@Html.LabelFor(x => x.GenreId)
				@Html.TextBoxFor(x => x.GenreId, new { @class = "form-control", @type = "text", @maxLength = "100", @placeholder = "Enter genre" })
				@Html.ValidationMessageFor(x => x.GenreId, null, new { @class = "text-danger" })
			</div> *@

@* 			<div class="col-md-5" finput>
				@Html.LabelFor(x => x.GenreId, "Genre")
				@Html.DropDownListFor(x => x.GenreId, (IEnumerable<SelectListItem>)ViewBag.GenreSelectList, "Select Genre", new { @class = "form-control" })
				@Html.ValidationMessageFor(x => x.GenreId, null, new { @class = "text-danger" })
			</div> *@

			<div class="col-md-5">
				<input type="submit" class="btn btn-primary" value="Update" />
			</div>


		}
	</div>
</div>



<script>
	let choosen = $(".chosen-select").chosen({ width: "500px" });

	$('#myForm').on('submit', function (e) {
		e.preventDefault();
		const form = e.target;
		const milestones = $(form.elements.milestone).val();
		if (milestones.length > 1) alert('error');
		else alert('success')
	})
</script>